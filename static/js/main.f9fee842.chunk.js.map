{"version":3,"sources":["index.js"],"names":["mapContainerStyle","width","height","center","lat","lng","App","_useState","useState","_useState2","_slicedToArray","polygons","setPolygons","_useState3","_useState4","newPolygonString","setNewPolygonString","React","createElement","type","value","onChange","event","target","placeholder","onClick","trim","polygonObject","JSON","parse","Array","isArray","Error","paths","map","point","concat","_toConsumableArray","error","console","message","LoadScript","googleMapsApiKey","GoogleMap","zoom","index","Polygon","key","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","ReactDOM","render","document","getElementById"],"mappings":"6LAIMA,EAAoB,CACxBC,MAAO,OACPC,OAAQ,SAGJC,EAAS,CACbC,IAAK,QACLC,KAAM,UAGFC,EAAM,WACV,IAAAC,EAAgCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,EAAgDL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GA6B5C,OACEG,IAAAC,cAAA,WACED,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEC,KAAK,OACLC,MAAOL,EACPM,SAjCkB,SAACC,GACzBN,EAAoBM,EAAMC,OAAOH,QAiC3BI,YAAY,oCAEdP,IAAAC,cAAA,UAAQO,QAhCK,WACjB,GAAgC,KAA5BV,EAAiBW,OAIrB,IACE,IAAMC,EAAgBC,KAAKC,MAAMd,GACjC,IAAKe,MAAMC,QAAQJ,GACjB,MAAM,IAAIK,MAAM,6CAGlB,IAAMC,EAAQN,EAAcO,KAAI,SAACC,GAAK,MAAM,CAC1C/B,IAAK+B,EAAM/B,IACXC,IAAK8B,EAAM9B,QAGbO,EAAY,GAADwB,OAAAC,YAAK1B,GAAQ,CAAEsB,KAC1BjB,EAAoB,IACpB,MAAOsB,GACPC,QAAQD,MAAM,uBAAwBA,EAAME,YAab,gBAE/BvB,IAAAC,cAACuB,IAAU,CAACC,iBAAiB,2CAC3BzB,IAAAC,cAACyB,IAAS,CACR3C,kBAAmBA,EACnBG,OAAQA,EACRyC,KAAM,IAELjC,EAASuB,KAAI,SAACD,EAAOY,GAAK,OACzB5B,IAAAC,cAAC4B,IAAO,CACNC,IAAKF,EACLZ,MAAOA,EACPe,QAAS,CACPC,YAAa,UACbC,cAAe,GACfC,aAAc,EACdC,UAAW,UACXC,YAAa,cAUd/C,YAEfgD,IAASC,OAAOtC,IAAAC,cAACZ,EAAG,MAAKkD,SAASC,eAAe,U","file":"static/js/main.f9fee842.chunk.js","sourcesContent":["import ReactDOM from 'react-dom'\nimport React, {useState} from 'react'\nimport {GoogleMap, LoadScript, Polygon} from '@react-google-maps/api'\n\nconst mapContainerStyle = {\n  width: '100%',\n  height: '400px',\n}\n\nconst center = {\n  lat: 37.7749,\n  lng: -122.4194,\n} // Change this to your desired initial center\n\nconst App = () => {\n  const [polygons, setPolygons] = useState([])\n  const [newPolygonString, setNewPolygonString] = useState('')\n\n  const handleInputChange = (event) => {\n    setNewPolygonString(event.target.value)\n  }\n\n  const addPolygon = () => {\n    if (newPolygonString.trim() === '') {\n      return\n    }\n\n    try {\n      const polygonObject = JSON.parse(newPolygonString)\n      if (!Array.isArray(polygonObject)) {\n        throw new Error('Invalid input format. Expecting an array.')\n      }\n\n      const paths = polygonObject.map((point) => ({\n        lat: point.lat,\n        lng: point.lng,\n      }))\n\n      setPolygons([...polygons, paths])\n      setNewPolygonString('')\n    } catch (error) {\n      console.error('Error parsing input:', error.message)\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={newPolygonString}\n          onChange={handleInputChange}\n          placeholder=\"Enter polygon coordinates array\"\n        />\n        <button onClick={addPolygon}>Add Polygon</button>\n      </div>\n      <LoadScript googleMapsApiKey=\"AIzaSyAY09ilRUEOWPhv21I5P7cOhKQw46ReEB0\">\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          center={center}\n          zoom={14}\n        >\n          {polygons.map((paths, index) => (\n            <Polygon\n              key={index}\n              paths={paths}\n              options={{\n                strokeColor: '#0000FF',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#0000FF',\n                fillOpacity: 0.35,\n              }}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  )\n}\n\nexport default App\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}